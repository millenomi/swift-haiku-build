From 372bfbe4568e85ab24df519b78bd3eb926126c97 Mon Sep 17 00:00:00 2001
From: Calvin Hill <calvin@hakobaito.co.uk>
Date: Sat, 27 Jan 2018 16:37:08 +0000
Subject: [PATCH] stdlib: properly reapply metadata patches

---
 stdlib/public/runtime/MetadataCache.h | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/stdlib/public/runtime/MetadataCache.h b/stdlib/public/runtime/MetadataCache.h
index cfb8a91..ad2eb2c 100644
--- a/stdlib/public/runtime/MetadataCache.h
+++ b/stdlib/public/runtime/MetadataCache.h
@@ -303,6 +303,7 @@ public:
     auto insertResult = Map.getOrInsert(key);
     Entry *entry = insertResult.first;
 
+    /*
     // If we didn't insert the entry, then we just need to get the
     // initialized value from the entry.
     if (!insertResult.second) {
@@ -337,7 +338,7 @@ public:
 
       return value;
     }
-
+*/
     // Otherwise, we created the entry and are responsible for
     // creating the metadata.
     auto value = builder();
@@ -348,12 +349,14 @@ public:
 #endif
 
     // Acquire the lock, set the value, and notify any waiters.
-    auto concurrency = Concurrency.get();
+/*    auto concurrency = Concurrency.get();
     concurrency->Lock.withLockThenNotifyAll(
         concurrency->Queue, [&entry, &value] { entry->setValue(value); });
-
+*/
     return value;
-  }
+
+    }
+
 };
 
 } // namespace swift
-- 
2.15.0

